// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PreConfigSliders /> Snapshot Deve corresponder ao Snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-3 css-zow5z4-MuiGrid-root"
      >
        <div
          class="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-3 css-12qstyp-MuiGrid-root"
        >
          <p
            class="MuiTypography-root MuiTypography-body1 css-1v2d8t3-MuiTypography-root"
          >
            <strong>
              SLIDER
            </strong>
          </p>
        </div>
        <div
          class="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-9 css-trcag1-MuiGrid-root"
        >
          <input
            data-testid="CONFIG_SLIDER_TEST_ID"
            sx="[object Object]"
            value="100"
          />
        </div>
        <div
          class="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-4 css-1equabv-MuiGrid-root"
        >
          <input
            data-testid="CONFIG_INPUT_TEST_ID"
            inputprops="[object Object]"
            sx="[object Object]"
            value="100"
            variant="standard"
          />
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-3 css-zow5z4-MuiGrid-root"
    >
      <div
        class="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-3 css-12qstyp-MuiGrid-root"
      >
        <p
          class="MuiTypography-root MuiTypography-body1 css-1v2d8t3-MuiTypography-root"
        >
          <strong>
            SLIDER
          </strong>
        </p>
      </div>
      <div
        class="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-9 css-trcag1-MuiGrid-root"
      >
        <input
          data-testid="CONFIG_SLIDER_TEST_ID"
          sx="[object Object]"
          value="100"
        />
      </div>
      <div
        class="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-4 css-1equabv-MuiGrid-root"
      >
        <input
          data-testid="CONFIG_INPUT_TEST_ID"
          inputprops="[object Object]"
          sx="[object Object]"
          value="100"
          variant="standard"
        />
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
